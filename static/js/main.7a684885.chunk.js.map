{"version":3,"sources":["elements/HeaderElements.js","components/Header.js","elements/PageElements.js","actions/action.js","actions/actionTypes.js","components/Cards.js","pages/Home/Home.js","App.js","serviceWorker.js","reducer/reducer.js","index.js"],"names":["HeaderWrapper","styled","div","_templateObject","HeaderLabel","_templateObject2","PancakeIcon","_templateObject3","PancakeIconWrapper","button","_templateObject4","MenuWrapper","_templateObject5","MenuHeader","_templateObject6","ThemeSelector","_templateObject7","ThemeSelectorWrapper","_templateObject8","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","headerLabel","state","sample","_this2","react","onClick","openMenu","className","style","transform","menuWidth","background","themeSetter","React","PageWrapper","PageElements_templateObject","boardBgColor","ModalWrapper","PageElements_templateObject2","NewList","PageElements_templateObject3","ListWrapper","PageElements_templateObject4","PageElements_templateObject5","CardWrapper","PageElements_templateObject6","CloseModal","PageElements_templateObject7","ModalWrapperMask","PageElements_templateObject8","ModalContentWrapper","_templateObject9","NewListInput","input","_templateObject10","AddButton","_templateObject11","CancelButton","_templateObject12","List","form","_templateObject13","_templateObject14","ListTitle","span","_templateObject15","AddCard","_templateObject16","CardTitle","_templateObject17","CardComments","_templateObject18","AddComment","_templateObject19","CardCommentText","_templateObject20","CloseIcon","_templateObject21","loadDataSuccess","type","newListSucces","value","data","newCardSuccess","id","updateCardSuccess","addCommentSuccess","listId","cardId","deleteCardSuccess","deleteListSuccess","Cards","_ref","items","onUpdateCard","parentId","addComment","deleteCard","map","cardItem","react_default","a","createElement","key","data-id","cardName","comments","length","item","text","placeholder","onKeyPress","e","lib_default","options","group","pull","put","onChange","Home","setTheme","theme","setState","showAddListModel","show","showModel","newList","event","displayMenu","addNewList","inputEle","document","getElementsByClassName","onNewList","toLowerCase","addNewCard","onNewCard","showCardModel","newCard","onCardDrag","keyCode","which","target","onAddComments","deleteList","onDeleteList","onDeleteCard","listData","onLoad","loadData","newListForm","maxLength","required","newCardForm","components_Header","listItem","title","cards","components_Cards","display","connect","card","loading","dispatch","listTitle","newListData","Math","floor","random","pow","actions","App","react_router","path","exact","component","to","Boolean","window","location","hostname","match","initialState","allCards","action","oldObject","updatedProperties","mergedVal","objectSpread","concat","updateObject","reducer","arguments","undefined","newState","JSON","parse","stringify","listToBeUpdated","filter","cardData","push","updatedCards","currentList","listCard","list","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","app","es","src_App","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7a684885.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const HeaderWrapper = styled.div`\n    width: 100%;\n    height: 40px;\n    background: #0067a3;\n`;\n\nexport const HeaderLabel = styled.div`\n    height: 20px;\n    line-height: 20px;\n    width: auto;\n    padding: 10px;\n    color: #fff;\n    font-family: sans-serif;\n`;\n\nexport const PancakeIcon = styled.div`\n    width: 30px;\n    height: 4px;\n    background-color: #fff;\n    margin: 6px 0;\n`;\n\nexport const PancakeIconWrapper = styled.button`\n    float: left;\n    background: transparent;\n    -webkit-appearance: none;\n    margin: 0px 5px;\n    border: 0px;\n`;\n\nexport const MenuWrapper = styled.div`\n    position: fixed;\n    background: #fff;\n    left: 0;\n    width: 300px;\n    overflow-x: hidden;\n    overflow-y: hidden;\n    transition: .5s;\n    z-index: 1;\n    height: -webkit-calc(100% - 40px);\n    transition-timing-function: ease;\n`;\n\nexport const MenuHeader = styled.div`\n    width: calc(100% - 20px);\n    padding: 10px;\n    height: 30px;\n    line-height: 30px;\n    font-family: sans-serif;\n`;\n\nexport const ThemeSelector = styled.div`\n    display: inline-block;\n    border-radius: 50%;\n    box-shadow: 0px 0px 2px;\n    width: 15px;\n    height: 15px;\n    border: 2px solid #ccc;\n    margin: 0px auto;\n`;\n\nexport const ThemeSelectorWrapper = styled.div`\n    width: 100%;\n    height: auto;\n    display: flex;\n    justify-content: space-between;\n`;","import * as React from 'react';\nimport {HeaderWrapper, PancakeIconWrapper, PancakeIcon, HeaderLabel, \n    MenuWrapper, MenuHeader, ThemeSelector, ThemeSelectorWrapper} from '../elements/HeaderElements'\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sample : ''\n        };\n    }\n\n    headerLabel = \"TrelloBoards\"\n\n    render () {\n        return (\n           <React.Fragment>\n               <HeaderWrapper>\n                    <PancakeIconWrapper onClick={() => this.props.openMenu()}>\n                        <PancakeIcon/>\n                        <PancakeIcon/>\n                        <PancakeIcon/>\n                    </PancakeIconWrapper>\n                    <HeaderLabel>{this.headerLabel}</HeaderLabel>\n                </HeaderWrapper>\n                <MenuWrapper className={'menuWrapper'} style={{transform: 'translateX(' + this.props.menuWidth + ')'}}>\n                    <MenuHeader>Theme</MenuHeader>\n                    <ThemeSelectorWrapper>\n                        <ThemeSelector style={{background : '#0079bf'}} onClick={() => this.props.themeSetter('#0079bf')}/>\n                        <ThemeSelector style={{background : '#000000'}} onClick={() => this.props.themeSetter('#000000')}/>\n                        <ThemeSelector style={{background : '#344c5a'}} onClick={() => this.props.themeSetter('#344c5a')}/>\n                        <ThemeSelector style={{background : '#cccccc'}} onClick={() => this.props.themeSetter('#cccccc')}/>\n                        <ThemeSelector style={{background : '#00243a'}} onClick={() => this.props.themeSetter('#00243a')}/>\n                    </ThemeSelectorWrapper>\n                </MenuWrapper>\n           </React.Fragment>\n        );\n    }\n}\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const PageWrapper = styled.div`\n    background : ${props => props.boardBgColor || \"#0079bf\"};\n    width: 100%;\n    height: 100%;\n`;\n\nexport const ModalWrapper = styled.div`\n    position: absolute;\n    left: 50%;\n    -webkit-transform: translateX(-50%) translateY(-50%);\n    transform: translateX(-50%) translateY(-50%);\n    top: 50%;\n    width: 400px;\n    height: auto;\n    min-height: 150px;\n    background: #fff;\n    border-radius: 10px;\n    z-index: 1;\n`;\n\nexport const NewList = styled.div`\n    min-width: 400px;\n    height: 100px;\n    line-height: 100px;\n    background: #000;\n    opacity: 0.5;\n    border-radius: 10px;\n    border: 1px solid #fff;\n    font-size: 40px;\n    text-align: center;\n    margin: 20px 10px;\n    color: #fff;\n    cursor: pointer;\n`;\n\nexport const ContentList = styled.div`\n    width: calc(400px - 20px);\n    min-height: 100px;\n    height: auto;\n    border-radius: 10px;\n    border: 1px solid #fff;\n    margin: 20px 10px;\n    padding: 10px;\n`;\n\nexport const ListWrapper = styled.div`\n    width: auto;\n    height: calc(100% - 40px);\n    display: flex;\n    overflow: scroll;\n`;\n\nexport const CardWrapper = styled.div`\n    margin: 10px;\n    padding: 10px;\n    width: calc(100% - 40px);\n    border-radius: 10px;\n    border: 1px solid #c5c5c5;\n    cursor: move;\n    position: relative;\n`;\n\nexport const CloseModal = styled.div`\n    position: absolute;\n    right: 10px;\n    top: 10px;\n    width: 32px;\n    height: 32px;\n    ::after {\n        position: absolute;\n        left: 15px;\n        content: ' ';\n        height: 33px;\n        width: 2px;\n        background-color: #333;\n        transform: rotate(-45deg);\n    }\n    ::before {\n        position: absolute;\n        left: 15px;\n        content: ' ';\n        height: 33px;\n        width: 2px;\n        background-color: #333;\n        transform: rotate(45deg);\n    }\n`;\n\nexport const ModalWrapperMask = styled.div`\n    position: fixed;\n    top: 0px;\n    width: 100%;\n    height: 100%;\n    background: #000;\n    opacity: 0.5;\n`;\n\nexport const ModalContentWrapper = styled.div`\n    padding: 10px;\n    width: calc(100% - 20px);\n    height: calc(100% - 20px);\n`;\n\nexport const NewListInput = styled.input`\n    width: 95%;\n    margin: 0 auto;\n    height: 60px;\n    -webkit-appearance: none;\n    border: 1px solid #ccc;\n    border-radius: 10px;\n    display: -webkit-box;\n    position: relative;\n    margin-top: 40px;\n    padding-left: 10px;\n    font-family: sans-serif;\n    font-size: 16px;\n    ::placeholder {\n       \n    }\n`;\n\nexport const AddButton = styled.button`\n    -webkit-appearance : none;\n    height: 50px;\n    width: calc(50% - 10px);\n    margin: 10px;\n    border-radius: 10px;\n    background: green;\n    color: #fff;\n    font-size: 16px;\n    font-family: sans-serif;\n`;\n\nexport const CancelButton = styled.button`\n    -webkit-appearance : none;\n    height: 50px;\n    width: calc(50% - 10px);\n    margin: 10px;\n    border-radius: 10px;\n    background: red;\n    color: #fff;\n    font-size: 16px;\n    font-family: sans-serif;\n`;\n\nexport const AddListForm = styled.form`\n`;\n\nexport const List = styled.div`\n    min-width: 400px;\n    min-height: 100px;\n    height: auto;\n    background: #fff;\n    border-radius: 10px;\n    border: 1px solid #fff;\n    margin: 20px 10px;\n    color: #000;\n    display: inline-table;\n    position: relative;\n`;\n\nexport const ListTitle = styled.span`\n    display: inherit;\n    margin: 10px;\n    width: calc(100% - 40px);\n    height: 20px;\n    line-height: 20px;\n    text-transform: capitalize;\n    border-bottom: 1px solid #6b6b6b;\n    box-shadow: -2px 17px 21px -13px #888888;\n    font-size: 22px;\n    font-family: sans-serif;\n    padding: 5px 10px;\n`;\n\nexport const AddCard = styled.div`\n    margin: 10px;\n    padding: 10px;\n    width: calc(100% - 40px);\n    height: 20px;\n    line-height: 20px;\n    background: #c1c1c1;\n    opacity: 0.5;\n    border-radius: 10px;\n    border: 1px solid #fff;\n    font-size: inherit;\n    color: #000;\n`;\n\nexport const CardTitle = styled.div`\n    display: inherit;\n    width: 100%;\n    height: 20px;\n    line-height: 20px;\n    text-transform: capitalize;\n    font-family: sans-serif;\n`;\n\nexport const CardComments = styled.div`\n    border-top: 1px solid #ccc;\n    padding-top: 10px;\n    margin-top: 10px;\n`;\n\nexport const AddComment = styled.input`\n    color: #868686;\n    font-family: inherit;\n    width: 100%;\n    height: auto;\n    border: none;\n    outline-width: 0;\n`;\n\nexport const CardCommentText = styled.span`\n    display: inherit;\n    width: calc(100% - 10px);\n    color: #666;\n    padding: 5px;\n    border: 1px solid #f7f7f7;\n    border-radius: 5px;\n    background: #f7f7f7;\n    margin: 5px 0px;\n`;\n\nexport const CloseIcon = styled.div`\n    position: absolute;\n    right: 10px;\n    top: 10px;\n    width: 15px;\n    height: 15px;\n    cursor: pointer;\n    ::after {\n        position: absolute;\n        left: 7px;\n        content: ' ';\n        height: 15px;\n        width: 1px;\n        background-color: #333;\n        transform: rotate(-45deg);\n    }\n    ::before {\n        position: absolute;\n        left: 7px;\n        content: ' ';\n        height: 15px;\n        width: 1px;\n        background-color: #333;\n        transform: rotate(45deg);\n    }\n`;","import * as actionTypes from './actionTypes';\n\nexport const loadData = () => {\n    return dispatch => {\n        dispatch(loadDataSuccess());\n    }\n}\n\nexport const newList = (listTitle) => {\n    let newListData = {\n        listData : [\n            {   \n                title: listTitle,\n                id: listTitle +  Math.floor(Math.random() * Math.pow(10,10)),\n                cards : []\n            }\n        ]\n    };\n    return dispatch => {\n        dispatch(newListSucces(newListData));\n    }\n}\n\nexport const newCard = (id, value) => {\n    return dispatch => {\n        dispatch(newCardSuccess(id, value));\n    }\n}\n\nexport const updateCard = (id, value) => {\n    return dispatch => {\n        dispatch(updateCardSuccess(id, value));\n    }\n}\n\nexport const addComment = (listId, cardId, value) => {\n    return dispatch => {\n        dispatch(addCommentSuccess(listId, cardId, value));\n    }\n}\n\nexport const deleteCard = (listId, cardId) => {\n    return dispatch => {\n        dispatch(deleteCardSuccess(listId, cardId));\n    }\n}\n\nexport const deleteList = (id) => {\n    return dispatch => {\n        dispatch(deleteListSuccess(id));\n    }\n}\n\nexport const loadDataSuccess = () => {\n    return {\n        type: actionTypes.loadDataSuccess\n    };\n};\n\nexport const newListSucces = (value) => {\n    return {\n        type: actionTypes.newListSucces,\n        data: value\n    };\n};\n\nexport const newCardSuccess = (id, value) => {\n    return {\n        type: actionTypes.newCardSuccess,\n        data: {id : id, value: value}\n    };\n};\n\nexport const updateCardSuccess = (id, value) => {\n    return {\n        type: actionTypes.updateCardSuccess,\n        data: {id : id, value: value}\n    };\n};\n\nexport const addCommentSuccess = (listId, cardId, value) => {\n    return {\n        type: actionTypes.addCommentSuccess,\n        data: {listId : listId, cardId: cardId, value: value}\n    };\n};\n\nexport const deleteCardSuccess = (listId, cardId) => {\n    return {\n        type: actionTypes.deleteCardSuccess,\n        data: {listId: listId, cardId: cardId}\n    };\n};\n\nexport const deleteListSuccess = (id) => {\n    return {\n        type: actionTypes.deleteListSuccess,\n        data: {id: id}\n    };\n};","export const newListSucces = 'newListSucces';\nexport const newCardSuccess = 'newCardSuccess';\nexport const updateCardSuccess = 'updateCardSuccess';\nexport const deleteCardSuccess = 'deleteCardSuccess';\nexport const deleteListSuccess = 'deleteListSuccess';\nexport const loadDataSuccess = 'loadDataSuccess';\nexport const addCommentSuccess = 'addCommentSuccess';","import React from 'react';\nimport Sortable from 'react-sortablejs';\nimport {CardWrapper, CardTitle, CardComments, AddComment, CardCommentText, CloseIcon} from '../elements/PageElements';\n \n// Functional Component\nconst Cards = ({items,onUpdateCard,parentId,addComment, deleteCard}) => {\n    items = items.map(cardItem => (\n        <CardWrapper key={cardItem.id} data-id={cardItem.id}>\n            <CloseIcon onClick={() => deleteCard(parentId, cardItem.id)}/>\n            <CardTitle>{cardItem.cardName}</CardTitle>\n            <CardComments>\n                {cardItem.comments.length ? \n                    cardItem.comments.map(item => (\n                        <CardCommentText key={item.id}>{item.text}</CardCommentText>\n                    )): null}\n                <AddComment placeholder=\"Add Comment\" onKeyPress={(e) => addComment(e, parentId, cardItem.id)}></AddComment>\n            </CardComments>\n        </CardWrapper>\n    ));\n \n    return (\n        <Sortable\n            options={{\n                group: 'shared',\n                pull: true,\n                put: true\n            }}\n            onChange={(items) => {\n                // console.log(items);\n                onUpdateCard(parentId, items);      \n            }}\n        >\n            {items}\n        </Sortable>\n    );\n};\n \nexport default Cards;","import * as React from 'react';\nimport Header from '../../components/Header';\nimport {PageWrapper, NewList, ListWrapper, ModalWrapper, \n    CloseModal, ModalWrapperMask, ModalContentWrapper, NewListInput, \n    AddButton, CancelButton, List, ListTitle, AddCard, CloseIcon} from '../../elements/PageElements';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/action';\nimport Cards from '../../components/Cards';\n\nclass Home extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            boardBgColor : '#0079bf',\n            displayMenu: 'none',\n            menuWidth : '-300px',\n            showModel: 'none',\n            newList: false,\n            newCard: '',\n            listData: []\n        };\n    }\n\n    async loadData () {\n        await this.props.onLoad();\n    }\n\n    componentDidMount () {\n        this.loadData();\n    }\n\n    setTheme = (theme) => {\n        this.setState({\n            boardBgColor: theme\n        });\n    }\n\n    showAddListModel = (show) => {\n        if (show) {\n            this.setState({\n                showModel: 'block',\n                newList: true\n            });\n        } else {\n            this.setState({\n                showModel: 'none',\n                newList: false\n            });\n        }\n    }\n\n    openMenu = (event) => {\n    //    if(typeof event != \"undefined\" && typeof event.target != \"undefined\" && (event.target.className.indexOf('menuWrapper') === -1 || event.target.parentNode.className.indexOf('menuWrapper') === -1))\n        if (this.state.displayMenu === 'none') {\n            this.setState({\n                displayMenu: 'block',\n                menuWidth : '0px'\n            });\n        } else {\n            this.setState({\n                displayMenu: 'none',\n                menuWidth : '-300px'\n            });\n        }\n    }\n\n    addNewList = (event) => {\n        let inputEle = document.getElementsByClassName('NewList')[0];\n        inputEle = typeof inputEle != \"undefined\" ? inputEle.value : '';\n        if (inputEle) {\n            this.props.onNewList(inputEle.toLowerCase());\n            document.getElementsByClassName('NewList')[0].value = '';\n        }\n        this.showAddListModel(false);\n    }\n\n    addNewCard = (event, id) => {\n        let inputEle = document.getElementsByClassName('NewList')[0];\n        inputEle = typeof inputEle != \"undefined\" ? inputEle.value : '';\n        if (inputEle) {\n            this.props.onNewCard(id, inputEle.toLowerCase());\n            document.getElementsByClassName('NewList')[0].value = '';\n        }\n        this.showCardModel('');\n    }\n\n    showCardModel = (id) => {\n        if (id) {\n            this.setState({\n                newCard : id,\n                showModel: 'block'\n            });\n        } else {\n            this.setState({\n                newCard : '',\n                showModel: 'none'\n            });\n        }\n    }\n\n    onCardDrag = (parentId, newList) => {\n        this.props.onUpdateCard(parentId, newList);\n    }\n\n    addComment = (event, listId, cardId) => {\n        let key = event.keyCode || event.which;\n        if (key === 13 && event.target.value !== '') {\n            this.props.onAddComments(listId, cardId, event.target.value);\n            event.target.value = '';\n        }\n    }\n\n    deleteList = (listId) => {\n        if (listId) {\n            this.props.onDeleteList(listId);\n        }\n    }\n\n    deleteCard = (listId, cardId) => {\n        if (cardId) {\n            this.props.onDeleteCard(listId, cardId);\n        }\n    }\n\n    render () {\n        let newListForm = <ModalContentWrapper>\n            <CloseModal onClick={() => this.showAddListModel(false)}/>\n            <NewListInput className=\"NewList\" placeholder=\"Add List Title\" maxLength=\"30\" required/>\n            <ListWrapper>\n                <AddButton onClick={(e) => this.addNewList(e)}>Add</AddButton>\n                <CancelButton onClick={() => this.showAddListModel(false)}>Cancel</CancelButton>\n            </ListWrapper>\n        </ModalContentWrapper>;\n        let newCardForm = <ModalContentWrapper>\n            <CloseModal onClick={() => this.showCardModel('')}/>\n            <NewListInput className=\"NewList\" placeholder=\"Add Card\" maxLength=\"30\" required/>\n            <ListWrapper>\n                <AddButton onClick={(e) => this.addNewCard(e,this.state.newCard)}>Add</AddButton>\n                <CancelButton onClick={() => this.showCardModel('')}>Cancel</CancelButton>\n            </ListWrapper>\n        </ModalContentWrapper>\n        return (\n            <PageWrapper boardBgColor={this.state.boardBgColor}>\n                <Header  themeSetter={this.setTheme} menuWidth={this.state.menuWidth} displayMenu={this.state.displayMenu} openMenu={this.openMenu}/>\n                {this.props.listData.length ? \n                    <ListWrapper>\n                        {\n                            this.props.listData.map(listItem => (\n                                <List key={listItem.id}>\n                                    <CloseIcon onClick={() => this.deleteList(listItem.id)}/>\n                                    <ListTitle>{listItem.title}</ListTitle>\n                                    {listItem.cards.length ?\n                                    <React.Fragment>\n                                        <Cards \n                                            items={listItem.cards} \n                                            onUpdateCard={this.onCardDrag} \n                                            parentId={listItem.id} \n                                            addComment={this.addComment} \n                                            deleteCard={this.deleteCard}\n                                        />\n                                    </React.Fragment>\n                                    : null }\n                                    <AddCard onClick={() => this.showCardModel(listItem.id)}>Add Card +</AddCard>\n                                </List>\n                            ))\n                        }\n                        <NewList onClick={() => this.showAddListModel(true)}>+</NewList>\n                    </ListWrapper>\n                    : <ListWrapper>\n                        <NewList onClick={() => this.showAddListModel(true)}>+</NewList>\n                    </ListWrapper>\n                }\n                <ModalWrapper style={{display: this.state.showModel}}>\n                    {this.state.newList ? newListForm : this.state.newCard ? newCardForm : null}\n                </ModalWrapper>\n                <ModalWrapperMask style={{display: this.state.showModel}}/>\n            </PageWrapper>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        listData: state.card.listData,\n        loading: state.card.loading\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLoad: () => dispatch(actions.loadData()),\n        onNewList: (value) => dispatch(actions.newList(value)),\n        onNewCard: (id, value) => dispatch(actions.newCard(id, value)),\n        onUpdateCard: (id, value) => dispatch(actions.updateCard(id, value)),\n        onAddComments: (listId, cardId, value) => dispatch(actions.addCommentSuccess(listId, cardId, value)),\n        onDeleteCard: (listId, cardId) => dispatch(actions.deleteCard(listId, cardId)),\n        onDeleteList: (id) => dispatch(actions.deleteList(id))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from 'react';\nimport './App.css';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Home from './pages/Home/Home'\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    listData: [],\n    loading: false,\n    allCards: []\n};\n\n// const cloneObject = (obj) => {\n//     var clone = {};\n//     for(var i in obj) {\n//         if(obj[i] != null &&  typeof(obj[i])==\"object\")\n//             clone[i] = cloneObject(obj[i]);\n//         else\n//             clone[i] = obj[i];\n//     }\n//     return clone;\n// }\n\nconst updateObject = (oldObject, updatedProperties) => {\n    let mergedVal = {\n        ...oldObject,\n        ...updatedProperties\n    };\n\n    mergedVal.listData = oldObject.listData.concat(updatedProperties.listData);\n\n    return mergedVal;\n};\n\nconst loadDataSuccess = (state) => {\n    return state;\n}\n\nconst newListSucces = (state, action) => {\n    return updateObject(state,action.data);\n}\n\nconst newCardSuccess = (state, action) => {\n    // let newState = cloneObject(state);\n    let newState = JSON.parse(JSON.stringify(state));\n    let listToBeUpdated = newState.listData.filter(item => item.id === action.data.id);\n    if (listToBeUpdated.length) {\n        let cardData = {\n            cardName : action.data.value,\n            id: action.data.value +  Math.floor(Math.random() * Math.pow(10,10)),\n            comments: []\n        }\n        listToBeUpdated[0].cards.push(cardData);\n        newState.allCards.push(cardData);\n    }\n    return newState;\n}\n\nconst updateCardSuccess = (state, action) => {\n    // let newState = cloneObject(state);\n    let newState = JSON.parse(JSON.stringify(state));\n    let updatedCards = action.data.value.map(items => {\n        let cardData = newState.allCards.filter(cards => cards.id === items);\n        if(cardData[0]) {\n            return cardData[0]\n        } else {\n            return null\n        }\n    });\n\n    let currentList = newState.listData.filter(items => items.id === action.data.id);\n    currentList[0].cards = updatedCards.filter(items => items !== null);\n    return newState;\n}\n\nconst deleteCardSuccess = (state, action) => {\n    let newState = JSON.parse(JSON.stringify(state));\n    let currentList = newState.listData.filter(items => items.id === action.data.listId);\n    if (currentList[0]) {\n        let listItem = currentList[0];\n        let listCard = listItem.cards.filter(item => item.id !== action.data.cardId);\n        let cardData = newState.allCards.filter(item => item.id !== action.data.cardId);\n        \n        if(listCard && cardData) {\n            newState.allCards = cardData;\n            currentList[0].cards = listCard;\n        }\n    }\n    return newState;\n}\n\nconst deleteListSuccess = (state, action) => {\n    let newState = JSON.parse(JSON.stringify(state));\n    let newList = newState.listData.filter(item => item.id !== action.data.id);\n    newState.listData = newList;\n    return newState;\n}\n\nconst addCommentSuccess = (state, action) => {\n    let newState = JSON.parse(JSON.stringify(state));\n    let list = newState.listData.filter(item => item.id === action.data.listId);\n    if (list[0]) {\n        let listItem = list[0];\n        let listCard = listItem.cards.filter(item => item.id === action.data.cardId);\n        let cardData = newState.allCards.filter(item => item.id === action.data.cardId);\n        \n        if(listCard[0] && cardData[0]) {\n            cardData[0].comments.push({\n                text: action.data.value,\n                id: action.data.value + Math.floor(Math.random() * Math.pow(10,10))\n            });\n            listCard[0].comments = cardData[0].comments;\n        }\n    }\n    return newState;\n}\n\nconst reducer = (state = initialState, action) => {\n    switch ( action.type ) {\n        case actionTypes.loadDataSuccess: return loadDataSuccess(state, action);\n        case actionTypes.newListSucces: return newListSucces(state, action);\n        case actionTypes.newCardSuccess: return newCardSuccess(state, action);\n        case actionTypes.updateCardSuccess: return updateCardSuccess( state, action );\n        case actionTypes.deleteCardSuccess: return deleteCardSuccess(state, action);\n        case actionTypes.deleteListSuccess: return deleteListSuccess(state, action);\n        case actionTypes.addCommentSuccess: return addCommentSuccess(state, action);\n        default: return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {MemoryRouter} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers} from 'redux';\nimport reducer from './reducer/reducer';\nimport thunk from 'redux-thunk';\n\nconst rootReducer = combineReducers({\n    card: reducer\n});\n\nconst store = createStore(rootReducer, compose(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <MemoryRouter>\n            <App/>\n        </MemoryRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}